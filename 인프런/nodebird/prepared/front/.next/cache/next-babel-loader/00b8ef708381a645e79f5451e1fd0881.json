{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript-workspace\\\\\\uC778\\uD504\\uB7F0\\\\nodebird\\\\prepared\\\\front\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport Link from 'next/link';\n\n// a태그에는 링크를 안 넣고 next의 Link를 이용하는 것이 좋다. \n// 컴포넌트의 props로 넘겨주는 함수는 useCallBack을 사용해야 한다. => 메모지에이션 => 함수의 의존성이 변경되지 않으면 함수를 다시 생성해서 불필요한 렌더링을 막을 수 있다.\n\nconst LoginForm = ({}) => {\n  const {\n    0: id,\n    1: setid\n  } = useState('');\n  const {\n    0: password,\n    1: setpassword\n  } = useState('');\n  const onChangeId = useCallback(e => {\n    setid(e.target.value);\n  }, []);\n  const onChangePassword = useCallback(e => {\n    setpassword(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    onChange: onChangeId,\n    value: id,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-pw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    name: \"user-pw\",\n    type: \"password\",\n    required: true,\n    onChange: onChangePassword,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 30\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\nexport default LoginForm;","map":{"version":3,"names":["React","useState","useCallback","Button","Form","Input","Link","LoginForm","id","setid","password","setpassword","onChangeId","e","target","value","onChangePassword","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","onChange","required","type","htmlType","loading","href"],"sources":["D:/javascript-workspace/인프런/nodebird/prepared/front/components/LoginForm.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport Link from 'next/link'\r\n\r\n// a태그에는 링크를 안 넣고 next의 Link를 이용하는 것이 좋다. \r\n// 컴포넌트의 props로 넘겨주는 함수는 useCallBack을 사용해야 한다. => 메모지에이션 => 함수의 의존성이 변경되지 않으면 함수를 다시 생성해서 불필요한 렌더링을 막을 수 있다.\r\n\r\nconst LoginForm = ({ }) => {\r\n  const [id, setid] = useState('')\r\n  const [password, setpassword] = useState('')\r\n\r\n  const onChangeId = useCallback(\r\n    (e) => {\r\n      setid(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onChangePassword = useCallback(\r\n    (e) => {\r\n      setpassword(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n  \r\n  \r\n\r\n  return (\r\n    <Form>\r\n      <div>\r\n        <label htmlFor='user-id'>아이디</label>\r\n        <br />\r\n        <Input\r\n          name='user-id'\r\n          onChange={onChangeId}\r\n          value={id}\r\n          required></Input>\r\n      </div>\r\n      <div>\r\n        <label\r\n          htmlFor='user-pw'>비밀번호</label>\r\n        <br />\r\n        <Input\r\n          name='user-pw'\r\n          type='password'\r\n          required\r\n          onChange={onChangePassword}\r\n          value={password}></Input>\r\n      </div>\r\n      <div>\r\n        <Button type='primary' htmlType='submit' loading={false}>로그인</Button>\r\n        <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}